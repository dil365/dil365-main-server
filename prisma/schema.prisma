datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum LanguageLevel {
  A1
  A2
  B1
  B2
  C1
  C2
}

enum SyntacticTypes {
  noun
  verb
  adjective
  adverb
  pronoun
  preposition
  conjunction
  interjection
}

model Words {
  id          Int            @id @default(autoincrement())
  sl          String         @db.VarChar(50)
  level       LanguageLevel
  word        String         @db.VarChar(100)
  description String         @db.Text
  example     String         @db.Text
  category    String         @db.VarChar(100)
  syntactic   SyntacticTypes
  created_at  DateTime       @default(now()) @db.DateTime(0)

  UserWords UserWords[]
}

model TokenSessions {
  id          Int      @id @default(autoincrement())
  created_for String   @db.VarChar(100)
  token       String   @db.Text
  expired_in  DateTime @db.DateTime(0)
  created_at  DateTime @default(now()) @db.DateTime(0)
  owner_id    Int
  Users       Users    @relation(fields: [owner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([owner_id], map: "owner_id")
}

model UserWords {
  id         Int      @id @default(autoincrement())
  user_id     Int
  word_id     Int
  saved      Boolean  @default(false)
  learned    Boolean  @default(false)
  created_at DateTime @default(now()) @db.DateTime(0)
  user       Users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  word       Words    @relation(fields: [word_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, word_id])
}

model UserDetails {
  user_id    Int       @id @unique(map: "user_id")
  first_name String    @db.VarChar(255)
  last_name  String    @db.VarChar(255)
  birthdate  DateTime? @db.Date
  Users      Users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Users {
  id               Int             @id @default(autoincrement())
  email            String          @unique(map: "email") @db.VarChar(255)
  password         String          @db.VarChar(255)
  email_registered Boolean
  created_at       DateTime        @default(now()) @db.DateTime(0)
  UserDetails      UserDetails?
  TokenSessions    TokenSessions[]
  UserWords        UserWords[]
}
